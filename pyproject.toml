[project]
name = "azure-ai-prompt-retrieval"
version = "0.1.0"
description = "Async prompt retrieval strategy for Azure AI Search using vector queries."
authors = [
    {name = "Luis Apellaniz Fontanez"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
dependencies = [
    "azure-search-documents>=11.4.0",
    "azure-core>=1.28.0",
    "python-dotenv==1.1.1",
    "opentelemetry-api>=1.26",
    "opentelemetry-sdk>=1.26",
    "azure-monitor-opentelemetry-exporter>=1.0.0b36",
    "aiohttp (>=3.12.15,<4.0.0)",
    "dependency-injector (>=4.48.1,<5.0.0)"
]

[project.optional-dependencies]
test = [
    "pytest>=8.2",
    "pytest-asyncio>=0.23"
]
dev = [
    "black>=24.4",
    "ruff>=0.5"
]

[tool.poetry]
packages = [
    { include = "prompt_retrieval", from = "src" },
    { include = "experimentation", from = "src" }
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

exclude = '''
/(
  \.venv
  | build
  | dist
  | \.eggs
  | \.git
  | \.mypy_cache
  | \.ruff_cache
  | \.pytest_cache
  | \.tox
)/
'''


[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
  ".venv",
  "build",
  "dist",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".pytest_cache",
]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
